<%- include("../layouts/boilerplate") %>

<style>
  body {
    background: linear-gradient(to bottom, #f4f6f8, #e8ecef);
    font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    color: #2c3e50;
    line-height: 1.6;
  }

  .event-title {
    text-align: center;
    font-size: 2.5rem;
    margin: 60px 0 40px;
    color: #2c3e50;
    font-weight: 700;
    letter-spacing: 1px;
    text-transform: uppercase;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .registration-form {
    width: 1000px;
    max-width: 95%;
    margin: 40px auto;
    padding: 50px;
    background: #ffffff;
    border-radius: 20px;
    box-shadow: 0 16px 32px rgba(0, 0, 0, 0.2);
    transition: transform 0.4s ease, box-shadow 0.4s ease;
  }

  .registration-form:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.25);
  }

  .form-fields .mb-3,
  .team-members .mb-3 {
    margin-bottom: 28px;
  }

  .form-label {
    display: block;
    font-weight: 600;
    margin-bottom: 12px;
    color: #34495e;
    font-size: 1.15rem;
    position: relative;
  }

  .form-control,
  .form-select {
    border: 2px solid #e0e0e0;
    border-radius: 10px;
    padding: 14px;
    font-size: 1rem;
    background: #fcfcfc;
    transition: border-color 0.3s, box-shadow 0.3s, background 0.3s;
    min-width: 160px;
    width: 100%;
  }

  .form-control:focus,
  .form-select:focus {
    border-color: #3498db;
    background: #ffffff;
    box-shadow: 0 0 10px rgba(52, 152, 219, 0.4);
    outline: none;
  }

  .invalid-feedback {
    color: #e74c3c;
    font-size: 0.9rem;
    margin-top: 8px;
    display: none;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .was-validated .form-control:invalid + .invalid-feedback,
  .was-validated .form-select:invalid + .invalid-feedback {
    display: block;
    opacity: 1;
  }

  input[type="checkbox"] {
    transform: scale(1.4);
    margin-right: 14px;
    cursor: pointer;
    accent-color: #3498db;
  }

  .button-container {
    text-align: center;
    margin-top: 50px;
  }

  .btn {
    padding: 16px 32px;
    font-size: 1.15rem;
    border-radius: 10px;
    border: none;
    cursor: pointer;
    font-weight: 600;
    transition: background-color 0.3s, transform 0.2s, box-shadow 0.3s;
  }

  .btn-success {
    background-color: #27ae60;
    color: #ffffff;
    box-shadow: 0 6px 12px rgba(39, 174, 96, 0.4);
  }

  .btn-success:hover {
    background-color: #219150;
    transform: translateY(-3px);
    box-shadow: 0 8px 16px rgba(39, 174, 96, 0.5);
  }

  .btn-outline-primary {
    border: 2px solid #3498db;
    color: #3498db;
    background: transparent;
    transition: all 0.3s ease;
  }

  .btn-outline-primary:hover {
    background-color: #3498db;
    color: #fff;
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(52, 152, 219, 0.4);
  }

  .btn:active {
    transform: scale(0.92);
  }

  .team-member-section {
    background: #f8f9fa;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 20px;
  }

  .team-member-card {
    background: white;
    padding: 15px;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 15px;
  }

  .member-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
  }

  .member-title {
    font-weight: bold;
    color: #333;
  }

  .remove-member {
    background: #dc3545;
    color: white;
    border: none;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s, transform 0.2s;
  }

  .remove-member:hover {
    background-color: #c82333;
    transform: scale(1.1);
  }

  @media (max-width: 768px) {
    .event-title {
      font-size: 2.2rem;
      margin: 40px 0 30px;
    }

    .registration-form {
      padding: 30px;
      margin: 20px auto;
    }

    .btn {
      width: 100%;
      padding: 14px;
    }

    .team-member-card {
      padding: 12px;
    }
  }

  @media (max-width: 480px) {
    .event-title {
      font-size: 1.8rem;
      margin: 30px 0 20px;
    }

    .registration-form {
      padding: 20px;
    }

    .form-label {
      font-size: 1.05rem;
    }
  }
</style>

<% const encodedEventName = encodeURIComponent(event.eventName); %> <% const
encodedClubName = encodeURIComponent(clubName); %>

<h2 class="event-title">Register for <%= event.eventName %></h2>

<% if (error && error.length > 0) { %>
<div class="alert alert-danger" role="alert"><%= error %></div>
<% } %> <% if (success && success.length > 0) { %>
<div class="alert alert-success" role="alert"><%= success %></div>
<% } %> <% if (!event || !event.teamSize || !Array.isArray(event.formFields)) {
%>
<div class="alert alert-danger" role="alert">
  Invalid event configuration. Please contact the administrator.
</div>
<% } else { %>

<form
  action="/<%= encodedClubName %>/<%= encodedEventName %>/register"
  method="post"
  class="needs-validation registration-form"
  novalidate
>
  <% if (event.teamSize.max > 1 || event.teamSize.min > 1) { %>
  <div class="mb-4">
    <label for="teamName" class="form-label"><b>Team Name</b></label>
    <input
      type="text"
      id="teamName"
      name="teamName"
      class="form-control"
      placeholder="Enter Team Name"
      required
    />
    <div class="invalid-feedback">Team name is required.</div>
  </div>
  <% } %>

  <div class="team-member-section">
    <h4 class="mb-3">
      <% if (event.teamSize.max > 1 || event.teamSize.min > 1) { %> Team Members
      (Min: <%= event.teamSize.min %>, Max: <%= event.teamSize.max %>) <% } else
      { %> Your Details <% } %>
    </h4>

    <div id="teamMembersContainer">
      <div class="team-member-card" data-member-index="0">
        <% if (event.teamSize.max > 1 || event.teamSize.min > 1) { %>
        <div class="member-header">
          <span class="member-title">Member 1</span>
        </div>
        <% } %> <% event.formFields.forEach((field) => { %> <% const safeLabel =
        field.label.replace(/[^a-zA-Z0-9]/g, '_'); %>
        <div class="mb-3">
          <% if((field.label).toLowerCase() != "team name"){ %>
          <label for="member-0-<%= safeLabel %>" class="form-label">
            <b><%= field.label %></b>
          </label>

          <% if (field.type === "checkbox") { %> <input type="checkbox"
          id="member-0-<%= safeLabel %>" name="teamMembers[0][<%= safeLabel %>]"
          value="true" <%= field.isRequired ? 'required' : '' %> /> <% } else {
          %> <input type="<%= field.type %>" id="member-0-<%= safeLabel %>"
          name="teamMembers[0][<%= safeLabel %>]" class="form-control"
          placeholder="<%= field.label %>" <%= field.isRequired ? 'required' :
          '' %> <%= field.type === 'number' ? 'pattern="[0-9]+"' : '' %> <%=
          field.type === 'email' ?
          'pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$"' : '' %> />
          <div class="invalid-feedback">This field is required.</div>
          <% } %> <% } %>
        </div>

        <% }) %>
      </div>
    </div>

    <% if (event.teamSize.max > 1) { %>
    <button
      type="button"
      id="addMemberBtn"
      class="btn btn-outline-primary mt-3"
    >
      <i class="fas fa-plus me-2"></i>Add Team Member
    </button>
    <% } %>
    <div class="invalid-feedback" id="teamSizeError" style="display: none">
      Please add between <%= event.teamSize.min %> and <%= event.teamSize.max %>
      members.
    </div>
  </div>

  <div class="button-container">
    <button type="submit" class="btn btn-success submit-btn">
      Submit Registration
    </button>
  </div>
</form>

<script>
  let memberCount = 1;
  const minTeamSize = " <%= event.teamSize.min || 1 %>";
  const maxTeamSize = "<%= event.teamSize.max || 1 %>";

  function addMember() {
    if (memberCount >= maxTeamSize) {
      alert(`Maximum team size is ${maxTeamSize}`);
      return;
    }

    const container = document.getElementById("teamMembersContainer");
    const newMemberIndex = memberCount++;

    const newMemberDiv = document.createElement("div");
    newMemberDiv.className = "team-member-card";
    newMemberDiv.dataset.memberIndex = newMemberIndex;
    newMemberDiv.innerHTML = `
      <div class="member-header">
        <span class="member-title">Member ${newMemberIndex + 1}</span>
        <button type="button" class="remove-member" onclick="removeMember(this)">Ã—</button>
      </div>
      <% event.formFields.forEach((field) => { %>
      <% const safeLabel = field.label.replace(/[^a-zA-Z0-9]/g, '_'); %>
      <div class="mb-3">
        <label for="member-${newMemberIndex}-<%= safeLabel %>" class="form-label"><b><%= field.label %></b></label>
        <% if (field.type === "checkbox") { %>
        <input
          type="checkbox"
          id="member-${newMemberIndex}-<%= safeLabel %>"
          name="teamMembers[${newMemberIndex}][<%= safeLabel %>]"
          value="true"
          <% if (field.isRequired) { %>required<% } %>
        />
        <% } else { %>
        <input
          type="<%= field.type %>"
          id="member-${newMemberIndex}-<%= safeLabel %>"
          name="teamMembers[${newMemberIndex}][<%= safeLabel %>]"
          class="form-control"
          placeholder="<%= field.label %>"
          <% if (field.isRequired) { %>required<% } %>
          <% if (field.type === 'number') { %>pattern="[0-9]+"<% } %>
          <% if (field.type === 'email') { %>pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"<% } %>
        />
        <div class="invalid-feedback">This field is required.</div>
        <% } %>
      </div>
      <% }) %>
    `;
    container.appendChild(newMemberDiv);
    updateAddButtonState();
  }

  function removeMember(button) {
    if (memberCount <= minTeamSize) {
      alert(`Minimum team size is ${minTeamSize}. Cannot remove more members.`);
      return;
    }

    const memberCard = button.closest(".team-member-card");
    memberCard.remove();
    memberCount--;

    // Reindex remaining members
    const members = document.querySelectorAll(".team-member-card");
    members.forEach((card, index) => {
      card.dataset.memberIndex = index;
      card.querySelector(".member-title").textContent = `Member ${index + 1}`;
      const inputs = card.querySelectorAll("input");
      inputs.forEach((input) => {
        const name = input.name.replace(
          /teamMembers\[\d+\]/,
          `teamMembers[${index}]`
        );
        input.name = name;
        input.id = input.id.replace(/member-\d+-/, `member-${index}-`);
      });
    });

    updateAddButtonState();
  }

  function updateAddButtonState() {
    const addButton = document.getElementById("addMemberBtn");
    if (addButton) {
      addButton.disabled = memberCount >= maxTeamSize;
    }
  }

  // Attach addMember to button
  const addMemberBtn = document.getElementById("addMemberBtn");
  if (addMemberBtn) {
    addMemberBtn.addEventListener("click", addMember);
  }

  // Form validation
  (() => {
    "use strict";
    const form = document.querySelector(".needs-validation");
    const teamSizeError = document.getElementById("teamSizeError");

    if (form) {
      form.addEventListener(
        "submit",
        (event) => {
          let isValid = form.checkValidity();
          const memberCount =
            document.querySelectorAll(".team-member-card").length;

          if (memberCount < minTeamSize || memberCount > maxTeamSize) {
            isValid = false;
            if (teamSizeError) {
              teamSizeError.style.display = "block";
            }
          } else if (teamSizeError) {
            teamSizeError.style.display = "none";
          }

          if (!isValid) {
            event.preventDefault();
            event.stopPropagation();
          }

          form.classList.add("was-validated");
        },
        false
      );
    }
  })();
</script>
<% } %>
