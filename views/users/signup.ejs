<%- include("../layouts/boilerplateWN") %>

<style>
  .event-form {
    background: #fff;
    border: 1px solid #ddd;
    transition: box-shadow 0.3s ease;
  }

  .event-form:hover {
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  }

  .form-label {
    font-weight: 600;
  }

  .form-control:focus {
    border-color: #007bff !important;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5) !important;
  }

  .btn-success {
    background-color: #28a745;
    border: none;
    padding: 12px 0;
    transition: all 0.3s ease;
  }

  .btn-success:hover {
    background-color: #218838;
    transform: translateY(-2px);
  }

  a {
    text-decoration: none;
  }

  .btn-sm {
    margin-bottom: 10px;
  }

  @media (max-width: 768px) {
    .event-form {
      padding: 15px;
    }

    .btn-lg {
      padding: 10px;
    }
  }
</style>

<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <h3 class="text-center mb-4">College Registration</h3>

      <form
        class="event-form shadow p-4 rounded"
        action="/collegeRegistration/signup"
        method="post"
        enctype="multipart/form-data"
      >
        <!-- College Name -->
        <div class="mb-3">
          <label class="form-label">College Name</label>
          <input
            placeholder="Register your college"
            name="college"
            type="text"
            class="form-control"
            required
          />
        </div>

        <!-- College ID -->
        <div class="mb-3">
          <label class="form-label">College ID</label>
          <input
            placeholder="College ID"
            name="collegeId"
            type="text"
            class="form-control"
            required
          />
        </div>

        <!-- Principal Name -->
        <div class="mb-3">
          <label class="form-label">Principal Name</label>
          <input
            placeholder="Principal Name"
            name="principalName"
            type="text"
            class="form-control"
            required
          />
        </div>

        <!-- Email -->
        <div class="mb-3">
          <label class="form-label">Official Email</label>
          <input
            id="email"
            name="email"
            type="email"
            class="form-control"
            required
          />
        </div>
        <button
          type="button"
          class="btn btn-sm btn-outline-primary"
          onclick="sendOtp()"
        >
          Send OTP
        </button>

        <div id="email-message" class="email-message"></div>

        <div class="mb-3">
          <label class="form-label">Enter OTP</label>
          <input
            id="otp"
            name="otp"
            type="text"
            class="form-control"
            required
            maxlength="6"
            pattern="\d{6}"
            inputmode="numeric"
            oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 6)"
          />
        </div>

        <button
          type="button"
          class="btn btn-sm btn-outline-primary"
          onclick="verifyOtpBeforeSubmit()"
        >
          Verify OTP
        </button>

        <div id="email-otp-message" class="email-otp-message"></div>

        <!-- Established Year -->
        <div class="mb-3">
          <label class="form-label">Established Year</label>
          <input
            placeholder="e.g. 1990"
            name="establishedYear"
            type="number"
            min="1800"
            class="form-control"
            required
          />
        </div>

        <!-- Address -->
        <div class="mb-3">
          <label class="form-label">College Address</label>
          <input
            placeholder="Address"
            name="address"
            type="text"
            class="form-control"
            required
          />
        </div>

        <!-- College Type -->
        <div class="mb-3">
          <label class="form-label">College Type</label>
          <select name="collegeType" class="form-control" required>
            <option value="" disabled selected>
              -- Select College Type --
            </option>
            <option value="Government">Government</option>
            <option value="Private">Private</option>
            <option value="Autonomous">Autonomous</option>
          </select>
        </div>

        <!-- Affiliated University -->
        <div class="mb-3">
          <label class="form-label">Affiliated University (Optional)</label>
          <input
            name="affiliatedUniversity"
            type="text"
            placeholder="Affiliated University"
            class="form-control"
          />
        </div>

        <!-- College Logo -->
        <div class="mb-3">
          <label class="form-label">College Logo</label>
          <input
            id="collegeLogo"
            name="collegeLogo"
            type="file"
            class="form-control"
            required
          />
        </div>

        <!-- Password -->
        <div class="mb-4">
          <label class="form-label">Set Password</label>
          <input
            placeholder="Password"
            name="password"
            type="password"
            class="form-control"
            required
          />
        </div>

        <!-- Hidden Role -->
        <input type="hidden" name="role" value="collegeAdmin" />

        <!-- Submit Button -->
        <div class="mb-4 text-center">
          <button class="btn btn-success btn-lg w-100" type="submit">
            Sign Up
          </button>
          <p class="mt-2">
            Already registered? <a href="/collegeRegistration/login">Sign In</a>
          </p>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  const apiBase = "http://localhost:8080";

  function showMessage(id, message, isSuccess = true) {
    const el = document.getElementById(id);
    el.textContent = message;
    el.className = `message ${isSuccess ? "success-message" : "error-message"}`;
    el.style.display = "block";

    setTimeout(() => {
      el.style.display = "none";
    }, 4000); // auto-hide after 4s
  }

  async function sendOtp() {
    const email = document.getElementById("email").value;
    if (!email) {
      showMessage("email-message", "Please enter email first", false);
      return;
    }

    try {
      const res = await fetch(`${apiBase}/send-otp`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email }),
      });

      const data = await res.json();
      showMessage("email-message", data.message, res.ok);
    } catch (err) {
      console.error(err);
      showMessage("email-message", "Error sending OTP", false);
    }
  }

  async function verifyOtpBeforeSubmit() {
    const email = document.getElementById("email").value;
    const otp = document.getElementById("otp").value;
    const otpInput = document.getElementById("otp");
    const otpBtn = document.querySelector(
      "button[onclick='verifyOtpBeforeSubmit()']"
    );

    if (!otp) {
      showMessage("email-otp-message", "Please enter the OTP", false);
      return;
    }

    try {
      const res = await fetch(`${apiBase}/verify-otp`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, otp }),
      });

      const data = await res.json();

      if (data.success) {
        showMessage("email-otp-message", "OTP verified ✅", true);

        // Disable OTP input & button
        otpInput.disabled = true;
        otpBtn.disabled = true;
        otpBtn.textContent = "Verified ✅";
      } else {
        showMessage("email-otp-message", data.message, false);
      }
    } catch (err) {
      console.error(err);
      showMessage("email-otp-message", "Error verifying OTP", false);
    }
  }
</script>
