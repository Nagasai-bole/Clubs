<%- include("../layouts/boilerplate") %>

<h1 class="text-center mt-4">College Registration</h1>

<div class="login-container">
  <form
    class="form"
    action="/collegeRegistration/login"
    method="post"
    id="loginForm"
    novalidate
  >
    <p class="form-title">Sign in to your college</p>

    <!-- College Input -->
    <div class="input-container">
      <input
        id="college"
        name="college"
        type="text"
        placeholder="Enter your college"
        required
      />
      <span>
        <svg
          stroke="currentColor"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"
            stroke-width="2"
            stroke-linejoin="round"
            stroke-linecap="round"
          ></path>
        </svg>
      </span>
    </div>
    <p class="error-message" id="collegeError"></p>

    <!-- Password Input -->
    <div class="input-container">
      <input
        id="password"
        name="password"
        type="password"
        placeholder="Enter password"
        required
      />
      <span>
        <svg
          stroke="currentColor"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
            stroke-width="2"
            stroke-linejoin="round"
            stroke-linecap="round"
          ></path>
          <path
            d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
            stroke-width="2"
            stroke-linejoin="round"
            stroke-linecap="round"
          ></path>
        </svg>
      </span>
    </div>
    <p class="error-message" id="passwordError"></p>

    <button class="submit" type="submit">Sign in</button>

    <p class="signup-link">
      No account?
      <a href="/collegeRegistration/signup">Sign up</a>
    </p>
  </form>
</div>

<!-- JavaScript for Real-Time Validation -->
<script>
  document
    .getElementById("loginForm")
    .addEventListener("submit", function (event) {
      let isValid = true;

      const collegeInput = document.getElementById("college");
      const passwordInput = document.getElementById("password");

      const collegeError = document.getElementById("collegeError");
      const passwordError = document.getElementById("passwordError");

      // Reset errors and styles
      collegeError.textContent = "";
      passwordError.textContent = "";
      collegeInput.classList.remove("error-border");
      passwordInput.classList.remove("error-border");

      // Validate College Name
      if (collegeInput.value.trim() === "") {
        collegeError.textContent = "College name is required.";
        collegeInput.classList.add("error-border");
        isValid = false;
      }

      // Validate Password
      if (passwordInput.value.trim() === "") {
        passwordError.textContent = "Password is required.";
        passwordInput.classList.add("error-border");
        isValid = false;
      }

      if (!isValid) {
        event.preventDefault();
      }
    });

  // Real-time Validation - Remove Error on Input
  document.querySelectorAll("input").forEach((input) => {
    input.addEventListener("input", function () {
      if (this.value.trim() !== "") {
        this.classList.remove("error-border"); // Remove red border
        this.nextElementSibling?.classList.remove("error-message"); // Remove error text
        this.parentElement.nextElementSibling.textContent = ""; // Clear error message
      }
    });
  });
</script>

<!-- CSS for Real-Time Error Handling -->
<style>
  .error-message {
    color: red;
    font-size: 0.9em;
    margin-top: 5px;
    text-align: left;
  }

  /* Red Border for Invalid Inputs */
  .error-border {
    border: 2px solid red !important;
  }

  /* Blue Border on Focus */
  .input-container input:focus {
    border-color: #4b6cb7 !important; /* Blue border */
    box-shadow: 0 0 5px rgba(75, 108, 183, 0.5) !important;
  }
</style>
